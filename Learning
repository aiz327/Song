1.js注释使用//.
/**/的方式,在注释代码的时候,正则表达式中可能存在*,会语法错误

js的执行环境
全局执行环境、局部执行环境（只有函数？）
每个执行环境都有一个变量对象、当执行到一个函数，函数的执行环境就会被推入一个环境栈中，执行完弹出栈。
当代码在环境中执行时，创建变量对象的作用域链。作用域链的前端始终是当前环境的变量对象，如果是函数的话将函数的活动对象作为其变量对象，开始时只有arguments。作用域链的下一个对象来自外部包含环境，以此类推。
标识符解析就是沿着作用域链的前段开始一级一级搜索。

js没有块级作用域。for、if语句中的变量都在当前的执行环境中

使用 var 声明的变量会自动被添加到最接近的环境中

只有函数和全局有作用域？


对象的访问方式：.访问、[]访问（可以有变量名、保留的标识符）
Array
创建Array可以new Array（Array("red", "blue", "green”）直接由值构成或者声明好长度new Array（3）单独一个数字不会成为值，多个同前new Array(1,2,3)
调用数组的toString()方法会返回由数组中每个值的字符串形式拼接而成的一个以逗号分隔的字符串。如果是对象则调用每个对象的toString（）
数组的sort方法可以传入一个比较函数通过返回一个小于零、等于零或大于零进行排序
slice()方法不会影响原始数组。
slice()方法可以接受一或两个参数，即要返回项的起始和结束位置。在只有一个参数的情况下，slice()方法返回从该参数指定位置开始到当前数组末尾的所有项。
如果有两个参数，该方法返回起始和结束位置之间的项——但不包括结束位置的项.

splice（）删除项，0可以不删除，后面的参数可以插入新项：
splice（0,2,"",......）
第一个参数：开始操作的位置
第二个参数：操作的数量
第三个参数以上：插入的新数组值
splice()方法始终都会返回一个数组，splice会影响原数组。splice执行后的返回值为删除的数组部分
